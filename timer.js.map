{"version":3,"file":"timer.js","sources":["../src/js/timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet startTime;\nlet timerID;\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  start: document.querySelector('button'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nrefs.start.addEventListener('click', onStart);\nrefs.start.setAttribute('disabled', true);\n\nfunction onStart() {\n  refs.input.setAttribute('disabled', true);\n  timerID = setInterval(() => {\n    const startTime = Date.now();\n    const TIME = userSelectedDate - startTime;\n    const timerTime = convertMs(TIME);\n\n    refs.days.textContent = padTime(timerTime.days);\n    refs.hours.textContent = padTime(timerTime.hours);\n    refs.minutes.textContent = padTime(timerTime.minutes);\n    refs.seconds.textContent = padTime(timerTime.seconds);\n\n    if (TIME < 1000) {\n      clearInterval(timerID);\n      refs.input.removeAttribute('disabled');\n    }\n  }, 1000);\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    startTime = Date.now();\n    userSelectedDate = selectedDates[0];\n\n    if (startTime > userSelectedDate) {\n      refs.start.setAttribute('disabled', true);\n      iziToast.error({\n        title: 'Error!',\n        message: 'Please choose a date in the future',\n        position: 'center',\n      });\n    }\n\n    if (startTime < userSelectedDate) {\n      refs.start.removeAttribute('disabled');\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction padTime(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["userSelectedDate","startTime","timerID","refs","onStart","TIME","timerTime","convertMs","padTime","options","selectedDates","iziToast","flatpickr","ms","days","hours","minutes","seconds","value"],"mappings":"+IAKA,IAAIA,EACAC,EACAC,EAEJ,MAAMC,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,MAAO,SAAS,cAAc,QAAQ,EACtC,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAA,EAAK,MAAM,iBAAiB,QAASC,CAAO,EAC5CD,EAAK,MAAM,aAAa,WAAY,EAAI,EAExC,SAASC,GAAU,CACjBD,EAAK,MAAM,aAAa,WAAY,EAAI,EACxCD,EAAU,YAAY,IAAM,CAC1B,MAAMD,EAAY,KAAK,MACjBI,EAAOL,EAAmBC,EAC1BK,EAAYC,EAAUF,CAAI,EAEhCF,EAAK,KAAK,YAAcK,EAAQF,EAAU,IAAI,EAC9CH,EAAK,MAAM,YAAcK,EAAQF,EAAU,KAAK,EAChDH,EAAK,QAAQ,YAAcK,EAAQF,EAAU,OAAO,EACpDH,EAAK,QAAQ,YAAcK,EAAQF,EAAU,OAAO,EAEhDD,EAAO,MACT,cAAcH,CAAO,EACrBC,EAAK,MAAM,gBAAgB,UAAU,EAExC,EAAE,GAAI,CACT,CAEA,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBT,EAAY,KAAK,MACjBD,EAAmBU,EAAc,CAAC,EAE9BT,EAAYD,IACdG,EAAK,MAAM,aAAa,WAAY,EAAI,EACxCQ,EAAS,MAAM,CACb,MAAO,SACP,QAAS,qCACT,SAAU,QAClB,CAAO,GAGCV,EAAYD,GACdG,EAAK,MAAM,gBAAgB,UAAU,CAExC,CACH,EAEAS,EAAUT,EAAK,MAAOM,CAAO,EAE7B,SAASF,EAAUM,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAST,EAAQU,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}